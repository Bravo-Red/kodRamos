# encoded by kronosplay

import base64, codecs
magic = 'IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KaW1wb3J0IHVybGxpYgppbXBvcnQgdXJsbGliMgppbXBvcnQgcmUKaW1wb3J0IG9zCmltcG9ydCB4Ym1jcGx1Z2luCmltcG9ydCB4Ym1jZ3VpCmltcG9ydCB4Ym1jYWRkb24KaW1wb3J0IHhibWN2ZnMKaW1wb3J0IHRyYWNlYmFjawppbXBvcnQgY29va2llbGliLGJhc2U2NAoKcHVlcnRvID0gJ2FIUjBjSE02THk5bmFYTjBMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5TGNtOXViM05RYkdGNWN5ODFaREUyWW1NME5EZGtNREV6T0RCaE1qQXhabUprTldZME9EWXlOek14TUM5eVlYY3ZiV1Z1ZFdGa1pHOXVMbmh0YkE9PScuZGVjb2RlKCdiYXNlNjQnKQpmcm9tIEJlYXV0aWZ1bFNvdXAgaW1wb3J0IEJlYXV0aWZ1bFN0b25lU291cCwgQmVhdXRpZnVsU291cCwgQmVhdXRpZnVsU09BUAp2aWV3bW9kZT1Ob25lCnRyeToKICAgIGZyb20geG1sLnNheC5zYXh1dGlscyBpbXBvcnQgZXNjYXBlCmV4Y2VwdDogdHJhY2ViYWNrLnByaW50X2V4YygpCnRyeToKICAgIGltcG9ydCBqc29uCmV4Y2VwdDoKICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24KaW1wb3J0IFNpbXBsZURvd25sb2FkZXIgYXMgZG93bmxvYWRlcgppbXBvcnQgdGltZQoKCnRzZG93bmxvYWRlcj1GYWxzZQoKcmVzb2x2ZV91cmw9WycxODB1cGxvYWQuY29tJywgJ2FsbG15dmlkZW9zLm5ldCcsICdiZXN0cmVhbXMubmV0JywgJ2NsaWNrbnVwbG9hZC5jb20nLCAnY2xvdWR6aWxsYS50bycsICdtb3ZzaGFyZS5uZXQnLCAnbm92YW1vdi5jb20nLCAnbm93dmlkZW8uc3gnLCAndmlkZW93ZWVkLmVzJywgJ2RhY2xpcHMuaW4nLCAnZGF0ZW11bGUuY29tJywgJ2Zhc3R2aWRlby5pbicsICdmYXN0c3RyZWFtLmluJywgJ2ZpbGVob290LmNvbScsICdmaWxlbnVrZS5jb20nLCAnc2hhcmVzaXguY29tJywgICdwbHVzLmdvb2dsZS5jb20nLCAncGljYXNhd2ViLmdvb2dsZS5jb20nLCAnZ29yaWxsYXZpZC5jb20nLCAnZ29yaWxsYXZpZC5pbicsICdncmlmdGhvc3QuY29tJywgJ2h1Z2VmaWxlcy5uZXQnLCAnaXBpdGhvcy50bycsICdpc2hhcmVkLmV1JywgJ2tpbmdmaWxlcy5uZXQnLCAnbWFpbC5ydScsICdteS5tYWlsLnJ1JywgJ3ZpZGVvYXBpLm15Lm1haWwucnUnLCAnbWlnaHR5dXBsb2FkLmNvbScsICdtb29zaGFyZS5iaXonLCAnbW92ZGl2eC5jb20nLCAnbW92cG9kLm5ldCcsICdtb3Zwb2QuaW4nLCAnbW92cmVlbC5jb20nLCAnbXJmaWxlLm1lJywgJ25vc3ZpZGVvLmNvbScsICdvcGVubG9hZC5pbycsICdwbGF5ZWQudG8nLCAnYml0c2hhcmUuY29tJywgJ2ZpbGVmYWN0b3J5LmNvbScsICdrMnMuY2MnLCAnb2Jvb20uY29tJywgJ3JhcGlkZ2F0b3IubmV0JywgJ3VwbG9hZGVkLm5ldCcsICdwcmltZXNoYXJlLnR2JywgJ2JpdHNoYXJlLmNvbScsICdmaWxlZmFjdG9yeS5jb20nLCAnazJzLmNjJywgJ29ib29tLmNvbScsICdyYXBpZGdhdG9yLm5ldCcsICd1cGxvYWRlZC5uZXQnLCAnc2hhcmVyZXBvLmNvbScsICdzdGFnZXZ1LmNvbScsICdzdHJlYW1jbG91ZC5ldScsICdzdHJlYW1pbi50bycsICd0aGVmaWxlLm1lJywgJ3RoZXZpZGVvLm1lJywgJ3R1c2ZpbGVzLm5ldCcsICd1cGxvYWRjLmNvbScsICd6YWxhYS5jb20nLCAndXBsb2Fkcm9ja2V0Lm5ldCcsICd1cHRvYm94LmNvbScsICd2LXZpZHMuY29tJywgJ3ZlZWhkLmNvbScsICd2aWRidWxsLmNvbScsICd2aWRlb21lZ2EudHYnLCAndmlkcGxheS5uZXQnLCAndmlkc3BvdC5uZXQnLCAndmlkdG8ubWUnLCAndmlkemkudHYnLCAndmltZW8uY29tJywgJ3ZrLmNvbScsICd2b2Rsb2NrZXIuY29tJywgJ3hmaWxlbG9hZC5jb20nLCAneHZpZHN0YWdlLmNvbScsICd6ZXR0YWhvc3QudHYnXQpnX2lnbm9yZVNldFJlc29sdmVkPVsncGx1Z2luLnZpZGVvLmRyYW1hc29ubGluZScsJ3BsdWdpbi52aWRlby5mNG1UZXN0ZXInLCdwbHVnaW4udmlkZW8uc2hhaGlkbWJjbmV0JywncGx1Z2luLnZpZGVvLlNwb3J0c0RldmlsJywncGx1Z2luLnN0cmVhbS52YXVnaG5saXZlLnR2JywncGx1Z2luLnZpZGVvLlplbVRWLXNoYW5pJ10KCmNsYXNzIE5vUmVkaXJlY3Rpb24odXJsbGliMi5IVFRQRXJyb3JQcm9jZXNzb3IpOgogICBkZWYgaHR0cF9yZXNwb25zZShzZWxmLCByZXF1ZXN0LCByZXNwb25zZSk6CiAgICAgICByZXR1cm4gcmVzcG9uc2UKICAgaHR0cHNfcmVzcG9uc2UgPSBodHRwX3Jlc3BvbnNlCgpSRU1PVEVfREJHPUZhbHNlOwppZiBSRU1PVEVfREJHOgogICAgIyBNYWtlIHB5ZGV2IGRlYnVnZ2VyIHdvcmtzIGZvciBhdXRvIHJlbG9hZC4KICAgICMgTm90ZSBweWRldmQgbW9kdWxlIG5lZWQgdG8gYmUgY29waWVkIGluIFhCTUNcc3lzdGVtXHB5dGhvblxMaWJccHlzcmMKICAgIHRyeToKICAgICAgICBpbXBvcnQgcHlzcmMucHlkZXZkIGFzIHB5ZGV2ZAogICAgIyBzdGRvdXRUb1NlcnZlciBhbmQgc3RkZXJyVG9TZXJ2ZXIgcmVkaXJlY3Qgc3Rkb3V0IGFuZCBzdGRlcnIgdG8gZWNsaXBzZSBjb25zb2xlCiAgICAgICAgcHlkZXZkLnNldHRyYWNlKCdsb2NhbGhvc3QnLCBzdGRvdXRUb1NlcnZlcj1UcnVlLCBzdGRlcnJUb1NlcnZlcj1UcnVlKQogICAgZXhjZXB0IEltcG9ydEVycm9yOgogICAgICAgIHN5cy5zdGRlcnIud3JpdGUoIkVycm9yOiAiICsKICAgICAgICAgICAgIllvdSBtdXN0IGFkZCBvcmcucHl0aG9uLnB5ZGV2LmRlYnVnLnB5c3JjIHRvIHlvdXIgUFlUSE9OUEFUSC4iKQogICAgICAgIHN5cy5leGl0KDEpCgoKYWRkb24gPSB4Ym1jYWRkb24uQWRkb24oKQphZGRvbl92ZXJzaW9uID0gYWRkb24uZ2V0QWRkb25JbmZvKCd2ZXJzaW9uJykKcHJvZmlsZSA9IHhibWMudHJhbnNsYXRlUGF0aChhZGRvbi5nZXRBZGRvbkluZm8oJ3Byb2ZpbGUnKS5kZWNvZGUoJ3V0Zi04JykpCmhvbWUgPSB4Ym1jLnRyYW5zbGF0ZVBhdGgoYWRkb24uZ2V0QWRkb25JbmZvKCdwYXRoJykuZGVjb2RlKCd1dGYtOCcpKQpmYXZvcml0ZXMgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ2Zhdm9yaXRlcycpCmhpc3RvcnkgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ2hpc3RvcnknKQpSRVYgPSBvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ2xpc3RfcmV2aXNpb24nKQppY29uID0gb3MucGF0aC5qb2luKGhvbWUsICdpY29uLnBuZycpCkZBTkFSVCA9IG9zLnBhdGguam9pbihob21lLCAnZmFuYXJ0LmpwZycpCnNvdXJjZV9maWxlID0gb3MucGF0aC5qb2luKHByb2ZpbGUsICdzb3VyY2VfZmlsZScpCmZ1bmN0aW9uc19kaXIgPSBwcm9maWxlCmNvbW11bml0eWZpbGVzID0gb3MucGF0aC5qb2luKHByb2ZpbGUsICdMaXZld2ViVFYnKQpkb3dubG9hZGVyID0gZG93bmxvYWRlci5TaW1wbGVEb3dubG9hZGVyKCkKZGVidWcgPSBhZGRvbi5nZXRTZXR0aW5nKCdkZWJ1ZycpCgppZiBvcy5wYXRoLmV4aXN0cyhmYXZvcml0ZXMpPT1UcnVlOgogICAgRkFWID0gb3BlbihmYXZvcml0ZXMpLnJlYWQoKQplbHNlOiBGQVYgPSBbXQppZiBvcy5wYXRoLmV4aXN0cyhzb3VyY2VfZmlsZSk9PVRydWU6CiAgICBTT1VSQ0VTID0gb3Blbihzb3VyY2VfZmlsZSkucmVhZCgpCmVsc2U6IFNPVVJDRVMgPSBbXQoKU09VUkNFUyA9IFt7InVybCI6IHB1ZXJ0bywgImZhbmFydCI6ICJodHRwOi8vaW1ndXIuY29tL2N6RFZNVlEifV0KCgoKZGVmIGFkZG9uX2xvZyhzdHJpbmcpOgogICAgaWYgZGVidWcgPT0gJ3RydWUnOgogICAgICAgIHhibWMubG9nKCJbYWRkb24ubGl2ZS5zdHJlYW1zcHJvLSVzXTogJXMiICUoYWRkb25fdmVyc2lvbiwgc3RyaW5nKSkKCgpkZWYgbWFrZVJlcXVlc3QodXJsLCBoZWFkZXJzPU5vbmUpOgogICAgICAgIHRyeToKICAgICAgICAgICAgaWYgaGVhZGVycyBpcyBOb25lOgogICAgICAgICAgICAgICAgaGVhZGVycyA9IHsnVXNlci1hZ2VudCcgOiAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTIgU2FmYXJpLzUzNy4zNid9CiAgICAgICAgICAgIHJlcSA9IHVybGxpYjIuUmVxdWVzdCh1cmwsTm9uZSxoZWFkZXJzKQogICAgICAgICAgICByZXNwb25zZSA9IHVybGxpYjIudXJsb3BlbihyZXEpCiAgICAgICAgICAgIGRhdGEgPSByZXNwb25zZS5yZWFkKCkKICAgICAgICAgICAgcmVzcG9uc2UuY2xvc2UoKQogICAgICAgICAgICByZXR1cm4gZGF0YQogICAgICAgIGV4Y2VwdCB1cmxsaWIyLlVSTEVycm9yLCBlOgogICAgICAgICAgICBhZGRvbl9sb2coJ1VSTDogJyt1cmwpCiAgICAgICAgICAgIGlmIGhhc2F0dHIoZSwgJ2NvZGUnKToKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnV2UgZmFpbGVkIHdpdGggZXJyb3IgY29kZSAtICVzLicgJSBlLmNvZGUpCiAgICAgICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCJYQk1DLk5vdGlmaWNhdGlvbihLcm9ub3NQbGF5LFdlIGZhaWxlZCB3aXRoIGVycm9yIGNvZGUgLSAiK3N0cihlLmNvZGUpKyIsMTAwMDAsIitpY29uKyIpIikKICAgICAgICAgICAgZWxpZiBoYXNhdHRyKGUsICdyZWFzb24nKToKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnV2UgZmFpbGVkIHRvIHJlYWNoIGEgc2VydmVyLicpCiAgICAgICAgICAgICAgICBhZGRvbl9sb2coJ1JlYXNvbjogJXMnICVlLnJlYXNvbikKICAgICAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIlhCTUMuTm90aWZpY2F0aW9uKEtyb25vc1BsYXksV2UgZmFpbGVkIHRvIHJlYWNoIGEgc2VydmVyLiAtICIrc3RyKGUucmVhc29uKSsiLDEwMDAwLCIraWNvbisiKSIpCgoJCQkJCmRlZiBTS2luZGV4KCk6CiAgICBhZGRvbl9sb2coIlNLaW5kZXgiKQogICAgYWRkRGlyKCdGYXZvcml0ZXMnLCdGYXZvcml0ZXMnLDQsJ2h0dHA6Ly9nb28uZ2wvWVJTY2txJyAsICBGQU5BUlQsJycsJycsJycsJycpCiAgICBnZXREYXRhKHB1ZXJ0by5NYWluQmFzZSwnJykKICAgIHhibWNwbHVnaW4uZW5kT2ZEaXJlY3RvcnkoaW50KHN5cy5hcmd2WzFdKSkJCQkJCgpkZWYgZ2V0U291cmNlcygpOgoJdHJ5OgoJCWlmIG9zLnBhdGguZXhpc3RzKGZhdm9yaXRlcykgPT0gVHJ1ZToKCQkJRkFWID0gb3BlbihmYXZvcml0ZXMpLnJlYWQoKQoJCQlpZiBGQVYgPT0gIltdIjoKCQkJCW9zLnJlbW92ZShmYXZvcml0ZXMpCgkJCWVsc2U6CgkJCQlhZGREaXIoJ1svQ09MT1JdW0NPTE9SIHdoaXRlXUlQUlRWUFJbL0NPTE9SXScsJ3VybCcsNCxvcy5wYXRoLmpvaW4oaG9tZSwgJ3Jlc291cmNlcycsICdmYXZvcml0ZS5wbmcnKSxGQU5BUlQsJycsJycsJycsJycpCgkJCQlhZGREaXIoJycsJycsMTAwLCcnLEZBTkFSVCwnJywnJywnJywnJykKCgkJc291cmNlcyA9IFNPVVJDRVMKICAgICAgICAgICAgICAgIGlmIGxlbihzb3VyY2VzKSA+IDE6CiAgICAgICAgICAgICAgICAgICAgZm9yIGkgaW4gc291cmNlczoKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIyMgZm9yIHByZSAxLjAuOCBzb3VyY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKGksIGxpc3QpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihpWzBdLmVuY29kZSgndXRmLTgnKSxpWzFdLmVuY29kZSgndXRmLTgnKSwxLGljb24sRkFOQVJULCcnLCcnLCcnLCcnLCdzb3VyY2UnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHVtYiA9IGljb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYW5hcnQgPSBGQU5BUlQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjID0gJycKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlID0gJycKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVkaXRzID0gJycKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW5yZSA9ICcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgaS5oYXNfa2V5KCd0aHVtYm5haWwnKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGh1bWIgPSBpWyd0aHVtYm5haWwnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGkuaGFzX2tleSgnZmFuYXJ0Jyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbmFydCA9IGlbJ2ZhbmFydCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgaS5oYXNfa2V5KCdkZXNjcmlwdGlvbicpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjID0gaVsnZGVzY3JpcHRpb24nXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGkuaGFzX2tleSgnZGF0ZScpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlID0gaVsnZGF0ZSddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgaS5oYXNfa2V5KCdnZW5yZScpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW5yZSA9IGlbJ2dlbnJlJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBpLmhhc19rZXkoJ2NyZWRpdHMnKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlZGl0cyA9IGlbJ2NyZWRpdHMnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihpWyd0aXRsZSddLmVuY29kZSgndXRmLTgnKSxpWyd1cmwnXS5lbmNvZGUoJ3V0Zi04JyksMSx0aHVtYixmYW5hcnQsZGVzYyxnZW5yZSxkYXRlLGNyZWRpdHMsJ3NvdXJjZScpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDogdHJhY2ViYWNrLnByaW50X2V4YygpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGlmIGxlbihzb3VyY2VzKSA9PSAxOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKHNvdXJjZXNbMF0sIGxpc3QpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0RGF0YShzb3VyY2VzWzBdWzFdLmVuY29kZSgndXRmLTgnKSxGQU5BUlQpCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXREYXRhKHNvdXJjZXNbMF1bJ3VybCddLCBzb3VyY2VzWzBdWydmYW5hcnQnXSkKICAgICAgICBleGNlcHQ6IHRyYWNlYmFjay5wcmludF9leGMoKQoKCmRlZiBhZGRTb3VyY2UodXJsPU5vbmUpOgogICAgICAgIGlmIHVybCBpcyBOb25lOgogICAgICAgICAgICBpZiBub3QgYWRkb24uZ2V0U2V0dGluZygibmV3X2ZpbGVfc291cmNlIikgPT0gIiI6CiAgICAgICAgICAgICAgIHNvdXJjZV91cmwgPSBhZGRvbi5nZXRTZXR0aW5nKCduZXdfZmlsZV9zb3VyY2UnKS5kZWNvZGUoJ3V0Zi04JykKICAgICAgICAgICAgZWxpZiBub3QgYWRkb24uZ2V0U2V0dGluZygibmV3X3VybF9zb3VyY2UiKSA9PSAiIjoKICAgICAgICAgICAgICAgc291cmNlX3VybCA9IGFkZG9uLmdldFNldHRpbmcoJ25ld191cmxfc291cmNlJykuZGVjb2RlKCd1dGYtOCcpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc291cmNlX3VybCA9IHVybAogICAgICAgIGlmIHNvdXJjZV91cmwgPT0gJycgb3Igc291cmNlX3VybCBpcyBOb25lOgogICAgICAgICAgICByZXR1cm4KICAgICAgICBhZGRvbl9sb2coJ0FkZGluZyBOZXcgU291cmNlOiAnK3NvdXJjZV91cmwuZW5jb2RlKCd1dGYtOCcpKQoKICAgICAgICBtZWRpYV9pbmZvID0gTm9uZQogICAgICAgICNwcmludCAnc291cmNlX3VybCcsc291cmNlX3VybAogICAgICAgIGRhdGEgPSBnZXRTb3VwKHNvdXJjZV91cmwpCiAgICAgICAgcHJpbnQgJ3NvdXJjZV91cmwnLHNvdXJjZV91cmwgICAgICAgCiAgICAgICAgaWYgaXNpbnN0YW5jZShkYXRhLEJlYXV0aWZ1bFNPQVApOgogICAgICAgICAgICBpZiBkYXRhLmZpbmQoJ2NoYW5uZWxzX2luZm8nKToKICAgICAgICAgICAgICAgIG1lZGlhX2luZm8gPSBkYXRhLmNoYW5uZWxzX2luZm8KICAgICAgICAgICAgZWxpZiBkYXRhLmZpbmQoJ2l0ZW1zX2luZm8nKToKICAgICAgICAgICAgICAgIG1lZGlhX2luZm8gPSBkYXRhLml0ZW1zX2luZm8KICAgICAgICBpZiBtZWRpYV9pbmZvOgogICAgICAgICAgICBzb3VyY2VfbWVkaWEgPSB7fQogICAgICAgICAgICBzb3VyY2VfbWVkaWFbJ3VybCddID0gc291cmNlX3VybAogICAgICAgICAgICB0cnk6IHNvdXJjZV9tZWRpYVsndGl0bGUnXSA9IG1lZGlhX2luZm8udGl0bGUuc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgICAgICB0cnk6IHNvdXJjZV9tZWRpYVsndGh1bWJuYWlsJ10gPSBtZWRpYV9pbmZvLnRodW1ibmFpbC5zdHJpbmcKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIHRyeTogc291cmNlX21lZGlhWydmYW5hcnQnXSA9IG1lZGlhX2luZm8uZmFuYXJ0LnN0cmluZwogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgdHJ5OiBzb3VyY2VfbWVkaWFbJ2dlbnJlJ10gPSBtZWRpYV9pbmZvLmdlbnJlLnN0cmluZwogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgdHJ5OiBzb3VyY2VfbWVkaWFbJ2Rlc2NyaXB0aW9uJ10gPSBtZWRpYV9pbmZvLmRlc2NyaXB0aW9uLnN0cmluZwogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgdHJ5OiBzb3VyY2VfbWVkaWFbJ2RhdGUnXSA9IG1lZGlhX2luZm8uZGF0ZS5zdHJpbmcKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIHRyeTogc291cmNlX21lZGlhWydjcmVkaXRzJ10gPSBtZWRpYV9pbmZvLmNyZWRpdHMuc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGlmICcvJyBpbiBzb3VyY2VfdXJsOgogICAgICAgICAgICAgICAgbmFtZVN0ciA9IHNvdXJjZV91cmwuc3BsaXQoJy8nKVstMV0uc3BsaXQoJy4nKVswXQogICAgICAgICAgICBpZiAnXFwnIGluIHNvdXJjZV91cmw6CiAgICAgICAgICAgICAgICBuYW1lU3RyID0gc291cmNlX3VybC5zcGxpdCgnXFwnKVstMV0uc3BsaXQoJy4nKVswXQogICAgICAgICAgICBpZiAnJScgaW4gbmFtZVN0cjoKICAgICAgICAgICAgICAgIG5hbWVTdHIgPSB1cmxsaWIudW5xdW90ZV9wbHVzKG5hbWVTdHIpCiAgICAgICAgICAgIGtleWJvYXJkID0geGJtYy5LZXlib2FyZChuYW1lU3RyLCdEaXNwbGF5ZWQgTmFtZSwgUmVuYW1lPycpCiAgICAgICAgICAgIGtleWJvYXJkLmRvTW9kYWwoKQogICAgICAgICAgICBpZiAoa2V5Ym9hcmQuaXNDb25maXJtZWQoKSA9PSBGYWxzZSk6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgbmV3U3RyID0ga2V5Ym9hcmQuZ2V0VGV4dCgpCiAgICAgICAgICAgIGlmIGxlbihuZXdTdHIpID09IDA6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgc291cmNlX21lZGlhID0ge30KICAgICAgICAgICAgc291cmNlX21lZGlhWyd0aXRsZSddID0gbmV3U3RyCiAgICAgICAgICAgIHNvdXJjZV9tZWRpYVsndXJsJ10gPSBzb3VyY2VfdXJsCiAgICAgICAgICAgIHNvdXJjZV9tZWRpYVsnZmFuYXJ0J10gPSBmYW5hcnQKCiAgICAgICAgaWYgb3MucGF0aC5leGlzdHMoc291cmNlX2ZpbGUpPT1GYWxzZToKICAgICAgICAgICAgc291cmNlX2xpc3QgPSBbXQogICAgICAgICAgICBzb3VyY2VfbGlzdC5hcHBlbmQoc291cmNlX21lZGlhKQogICAgICAgICAgICBiID0gb3Blbihzb3VyY2VfZmlsZSwidyIpCiAgICAgICAgICAgIGIud3JpdGUoanNvbi5kdW1wcyhzb3VyY2VfbGlzdCkpCiAgICAgICAgICAgIGIuY2xvc2UoKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNvdXJjZXMgPSBqc29uLmxvYWRzKG9wZW4oc291cmNlX2ZpbGUsInIiKS5yZWFkKCkpCiAgICAgICAgICAgIHNvdXJjZXMuYXBwZW5kKHNvdXJjZV9tZWRpYSkKICAgICAgICAgICAgYiA9IG9wZW4oc291cmNlX2ZpbGUsInciKQogICAgICAgICAgICBiLndyaXRlKGpzb24uZHVtcHMoc291cmNlcykpCiAgICAgICAgICAgIGIuY2xvc2UoKQogICAgICAgIGFkZG9uLnNldFNldHRpbmcoJ25ld191cmxfc291cmNlJywgIiIpCiAgICAgICAgYWRkb24uc2V0U2V0dGluZygnbmV3X2ZpbGVfc291cmNlJywgIiIpCiAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbigiWEJNQy5Ob3RpZmljYXRpb24oS3Jvbm9zUGxheSxOZXcgc291cmNlIGFkZGVkLiw1MDAwLCIraWNvbisiKSIpCiAgICAgICAgaWYgbm90IHVybCBpcyBOb25lOgogICAgICAgICAgICBpZiAneGJtY3BsdXMueGIuZnVucGljLmRlJyBpbiB1cmw6CiAgICAgICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCJYQk1DLkNvbnRhaW5lci5VcGRhdGUoJXM/bW9kZT0xNCxyZXBsYWNlKSIgJXN5cy5hcmd2WzBdKQogICAgICAgICAgICBlbGlmICdjb21tdW5pdHktbGlua3MnIGluIHVybDoKICAgICAgICAgICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIlhCTUMuQ29udGFpbmVyLlVwZGF0ZSglcz9tb2RlPTEwLHJlcGxhY2UpIiAlc3lzLmFyZ3ZbMF0pCiAgICAgICAgZWxzZTogYWRkb24ub3BlblNldHRpbmdzKCkKCgpkZWYgcm1Tb3VyY2UobmFtZSk6CiAgICAgICAgc291cmNlcyA9IGpzb24ubG9hZHMob3Blbihzb3VyY2VfZmlsZSwiciIpLnJlYWQoKSkKICAgICAgICBmb3IgaW5kZXggaW4gcmFuZ2UobGVuKHNvdXJjZXMpKToKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShzb3VyY2VzW2luZGV4XSwgbGlzdCk6CiAgICAgICAgICAgICAgICBpZiBzb3VyY2VzW2luZGV4XVswXSA9PSBuYW1lOgogICAgICAgICAgICAgICAgICAgIGRlbCBzb3VyY2VzW2luZGV4XQogICAgICAgICAgICAgICAgICAgIGIgPSBvcGVuKHNvdXJjZV9maWxlLCJ3IikKICAgICAgICAgICAgICAgICAgICBiLndyaXRlKGpzb24uZHVtcHMoc291cmNlcykpCiAgICAgICAgICAgICAgICAgICAgYi5jbG9zZSgpCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGlmIHNvdXJjZXNbaW5kZXhdWyd0aXRsZSddID09IG5hbWU6CiAgICAgICAgICAgICAgICAgICAgZGVsIHNvdXJjZXNbaW5kZXhdCiAgICAgICAgICAgICAgICAgICAgYiA9IG9wZW4oc291cmNlX2ZpbGUsInciKQogICAgICAgICAgICAgICAgICAgIGIud3JpdGUoanNvbi5kdW1wcyhzb3VyY2VzKSkKICAgICAgICAgICAgICAgICAgICBiLmNsb3NlKCkKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oIlhCTUMuQ29udGFpbmVyLlJlZnJlc2giKQoKCmRlZiBnZXRfeG1sX2RhdGFiYXNlKHVybCwgYnJvd3NlPUZhbHNlKToKICAgICAgICBpZiB1cmwgaXMgTm9uZToKICAgICAgICAgICAgdXJsID0gJ2h0dHA6Ly94Ym1jcGx1cy54Yi5mdW5waWMuZGUvd3d3LWRhdGEvZmlsZXN5c3RlbS8nCiAgICAgICAgc291cCA9IEJlYXV0aWZ1bFNvdXAobWFrZVJlcXVlc3QodXJsKSwgY29udmVydEVudGl0aWVzPUJlYXV0aWZ1bFNvdXAuSFRNTF9FTlRJVElFUykKICAgICAgICBmb3IgaSBpbiBzb3VwKCdhJyk6CiAgICAgICAgICAgIGhyZWYgPSBpWydocmVmJ10KICAgICAgICAgICAgaWYgbm90IGhyZWYuc3RhcnRzd2l0aCgnPycpOgogICAgICAgICAgICAgICAgbmFtZSA9IGkuc3RyaW5nCiAgICAgICAgICAgICAgICBpZiBuYW1lIG5vdCBpbiBbJ1BhcmVudCBEaXJlY3RvcnknLCAncmVjeWNsZV9iaW4vJ106CiAgICAgICAgICAgICAgICAgICAgaWYgaHJlZi5lbmRzd2l0aCgnLycpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBicm93c2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGREaXIobmFtZSx1cmwraHJlZiwxNSxpY29uLGZhbmFydCwnJywnJywnJykKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihuYW1lLHVybCtocmVmLDE0LGljb24sZmFuYXJ0LCcnLCcnLCcnKQogICAgICAgICAgICAgICAgICAgIGVsaWYgaHJlZi5lbmRzd2l0aCgnLnhtbCcpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBicm93c2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGREaXIobmFtZSx1cmwraHJlZiwxLGljb24sZmFuYXJ0LCcnLCcnLCcnLCcnLCdkb3dubG9hZCcpCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhzb3VyY2VfZmlsZSk9PVRydWU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbmFtZSBpbiBTT1VSQ0VTOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGREaXIobmFtZSsnIChpbiB1c2UpJyx1cmwraHJlZiwxMSxpY29uLGZhbmFydCwnJywnJywnJywnJywnZG93bmxvYWQnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihuYW1lLHVybCtocmVmLDExLGljb24sZmFuYXJ0LCcnLCcnLCcnLCcnLCdkb3dubG9hZCcpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZERpcihuYW1lLHVybCtocmVmLDExLGljb24sZmFuYXJ0LCcnLCcnLCcnLCcnLCdkb3dubG9hZCcpCgoKZGVmIGdldENvbW11bml0eVNvdXJjZXMoYnJvd3NlPUZhbHNlKToKICAgICAgICB1cmwgPSAnaHR0cDovL2NvbW11bml0eS1saW5rcy5nb29nbGVjb2RlLmNvbS9zdm4vdHJ1bmsvJwogICAgICAgIHNvdXAgPSBCZWF1dGlmdWxTb3VwKG1ha2VSZXF1ZXN0KHVybCksIGNvbnZlcnRFbnRpdGllcz1CZWF1dGlmdWxTb3VwLkhUTUxfRU5USVRJRVMpCiAgICAgICAgZmlsZXMgPSBzb3VwKCd1bCcpWzBdKCdsaScpWzE6XQogICAgICAgIGZvciBpIGluIGZpbGVzOgogICAgICAgICAgICBuYW1lID0gaSgnYScpWzBdWydocmVmJ10KICAgICAgICAgICAgaWYgYnJvd3NlOgogICAgICAgICAgICAgICAgYWRkRGlyKG5hbWUsdXJsK25hbWUsMSxpY29uLGZhbmFydCwnJywnJywnJywnJywnZG93bmxvYWQnKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgYWRkRGlyKG5hbWUsdXJsK25hbWUsMTEsaWNvbixmYW5hcnQsJycsJycsJycsJycsJ2Rvd25sb2FkJykKCgpkZWYgZ2V0U291cCh1cmwsZGF0YT1Ob25lKToKICAgICAgICBnbG9iYWwgdmlld21vZGUsdHNkb3dubG9hZGVyCiAgICAgICAgdHNkb3dubG9hZGVyPUZhbHNlCiAgICAgICAgaWYgdXJsLnN0YXJ0c3dpdGgoJ2h0dHA6Ly8nKSBvciB1cmwuc3RhcnRzd2l0aCgnaHR0cHM6Ly8nKToKICAgICAgICAgICAgZW5ja2V5PUZhbHNlCiAgICAgICAgICAgIGlmICckJFRTRE9XTkxPQURFUiQkJyBpbiB1cmw6CiAgICAgICAgICAgICAgICB0c2Rvd25sb2FkZXI9VHJ1ZQogICAgICAgICAgICAgICAgdXJsPXVybC5yZXBsYWNlKCIkJFRTRE9XTkxPQURFUiQkIiwiIikKICAgICAgICAgICAgaWYgJyQkTFNQcm9FbmNLZXk9JyBpbiB1cmw6CiAgICAgICAgICAgICAgICBlbmNrZXk9dXJsLnNwbGl0KCckJExTUHJvRW5jS2V5PScpWzFdLnNwbGl0KCckJCcpWzBdCiAgICAgICAgICAgICAgICBycD0nJCRMU1Byb0VuY0tleT0lcyQkJyVlbmNrZXkKICAgICAgICAgICAgICAgIHVybD11cmwucmVwbGFjZShycCwiIikKICAgICAgICAgICAgICAgIAogICAgICAgICAgICBkYXRhID1tYWtlUmVxdWVzdCh1cmwpCiAgICAgICAgICAgIGlmIGVuY2tleToKICAgICAgICAgICAgICAgICAgICBpbXBvcnQgcHlhZXMKICAgICAgICAgICAgICAgICAgICBlbmNrZXk9ZW5ja2V5LmVuY29kZSgiYXNjaWkiKQogICAgICAgICAgICAgICAgICAgIHByaW50IGVuY2tleQogICAgICAgICAgICAgICAgICAgIG1pc3NpbmdieXRlcz0xNi1sZW4oZW5ja2V5KQogICAgICAgICAgICAgICAgICAgIGVuY2tleT1lbmNrZXkrKGNocigwKSoobWlzc2luZ2J5dGVzKSkKICAgICAgICAgICAgICAgICAgICBwcmludCByZXByKGVuY2tleSkKICAgICAgICAgICAgICAgICAgICBkYXRhPWJhc2U2NC5iNjRkZWNvZGUoZGF0YSkKICAgICAgICAgICAgICAgICAgICBkZWNyeXB0b3IgPSBweWFlcy5uZXcoZW5ja2V5ICwgcHlhZXMuTU9ERV9FQ0IsIElWPU5vbmUpCiAgICAgICAgICAgICAgICAgICAgZGF0YT1kZWNyeXB0b3IuZGVjcnlwdChkYXRhKS5zcGxpdCgnXDAnKVswXQogICAgICAgICAgICAgICAgICAgICNwcmludCByZXByKGRhdGEpCiAgICAgICAgICAgIGlmIHJlLnNlYXJjaCgiI0VYVE0zVSIsZGF0YSkgb3IgJ20zdScgaW4gdXJsOgojICAgICAgICAgICAgICAgIHByaW50ICdmb3VuZCBtM3UgZGF0YScKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhCiAgICAgICAgZWxpZiBkYXRhID09IE5vbmU6CiAgICAgICAgICAgIGlmIG5vdCAnLycgIGluIHVybCBvciBub3QgJ1xcJyBpbiB1cmw6CiMgICAgICAgICAgICAgICAgcHJpbnQgJ05vIGRpcmVjdG9yeSBmb3VuZC4gTGV0cyBtYWtlIHRoZSB1cmwgdG8gY2FjaGUgZGlyJwogICAgICAgICAgICAgICAgdXJsID0gb3MucGF0aC5qb2luKGNvbW11bml0eWZpbGVzLHVybCkKICAgICAgICAgICAgaWYgeGJtY3Zmcy5leGlzdHModXJsKToKICAgICAgICAgICAgICAgIGlmIHVybC5zdGFydHN3aXRoKCJzbWI6Ly8iKSBvciB1cmwuc3RhcnRzd2l0aCgibmZzOi8vIik6CiAgICAgICAgICAgICAgICAgICAgY29weSA9IHhibWN2ZnMuY29weSh1cmwsIG9zLnBhdGguam9pbihwcm9maWxlLCAndGVtcCcsICdzb3JjZV90ZW1wLnR4dCcpKQogICAgICAgICAgICAgICAgICAgIGlmIGNvcHk6CiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBvcGVuKG9zLnBhdGguam9pbihwcm9maWxlLCAndGVtcCcsICdzb3JjZV90ZW1wLnR4dCcpLCAiciIpLnJlYWQoKQogICAgICAgICAgICAgICAgICAgICAgICB4Ym1jdmZzLmRlbGV0ZShvcy5wYXRoLmpvaW4ocHJvZmlsZSwgJ3RlbXAnLCAnc29yY2VfdGVtcC50eHQnKSkKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBhZGRvbl9sb2coImZhaWxlZCB0byBjb3B5IGZyb20gc21iOiIpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGRhdGEgPSBvcGVuKHVybCwgJ3InKS5yZWFkKCkKICAgICAgICAgICAgICAgICAgICBpZiByZS5tYXRjaCgiI0VYVE0zVSIsZGF0YSlvciAnbTN1JyBpbiB1cmw6CiMgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAnZm91bmQgbTN1IGRhdGEnCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBhZGRvbl9sb2coIlNvdXAgRGF0YSBub3QgZm91bmQhIikKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgIGlmICc8U2V0Vmlld01vZGU+JyBpbiBkYXRhOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB2aWV3bW9kZT1yZS5maW5kYWxsKCc8U2V0Vmlld01vZGU+KC4qPyk8JyxkYXRhKVswXQogICAgICAgICAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbigiQ29udGFpbmVyLlNldFZpZXdNb2RlKCVzKSIldmlld21vZGUpCiAgICAgICAgICAgICAgICBwcmludCAnZG9uZSBzZXR2aWV3Jyx2aWV3bW9kZQogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICByZXR1cm4gQmVhdXRpZnVsU09BUChkYXRhLCBjb252ZXJ0RW50aXRpZXM9QmVhdXRpZnVsU3RvbmVTb3VwLlhNTF9FTlRJVElFUykKCgpkZWYgZ2V0RGF0YSh1cmwsZmFuYXJ0LCBkYXRhPU5vbmUpOgogICAgc291cCA9IGdldFNvdXAodXJsLGRhdGEpCiAgICAjcHJpbnQgdHlwZShzb3VwKQogICAgaWYgaXNpbnN0YW5jZShzb3VwLEJlYXV0aWZ1bFNPQVApOgogICAgI3ByaW50ICd4eHh4eHh4eHh4c291cCcsc291cAogICAgICAgIGlmIGxlbihzb3VwKCdjaGFubmVscycpKSA+IDAgYW5kIGFkZG9uLmdldFNldHRpbmcoJ2Rvbm90c2hvd2J5Y2hhbm5lbHMnKSA9PSAnZmFsc2UnOgogICAgICAgICAgICBjaGFubmVscyA9IHNvdXAoJ2NoYW5uZWwnKQogICAgICAgICAgICBmb3IgY2hhbm5lbCBpbiBjaGFubmVsczoKIyAgICAgICAgICAgICAgICBwcmludCBjaGFubmVsCgogICAgICAgICAgICAgICAgbGlua2VkVXJsPScnCiAgICAgICAgICAgICAgICBsY291bnQ9MAogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGxpbmtlZFVybCA9ICBjaGFubmVsKCdleHRlcm5hbGxpbmsnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICBsY291bnQ9bGVuKGNoYW5uZWwoJ2V4dGVybmFsbGluaycpKQogICAgICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgICAgICAjcHJpbnQgJ2xpbmtlZFVybCcsbGlua2VkVXJsLGxjb3VudAogICAgICAgICAgICAgICAgaWYgbGNvdW50PjE6IGxpbmtlZFVybD0nJwoKICAgICAgICAgICAgICAgIG5hbWUgPSBjaGFubmVsKCduYW1lJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICB0aHVtYm5haWwgPSBjaGFubmVsKCd0aHVtYm5haWwnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIHRodW1ibmFpbCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbCA9ICcnCgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGlmIG5vdCBjaGFubmVsKCdmYW5hcnQnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgYWRkb24uZ2V0U2V0dGluZygndXNlX3RodW1iJykgPT0gInRydWUiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFuQXJ0ID0gdGh1bWJuYWlsCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSBmYW5hcnQKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSBjaGFubmVsKCdmYW5hcnQnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICBpZiBmYW5BcnQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSBmYW5hcnQKCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgZGVzYyA9IGNoYW5uZWwoJ2luZm8nKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICBpZiBkZXNjID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgZGVzYyA9ICcnCgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGdlbnJlID0gY2hhbm5lbCgnZ2VucmUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICBpZiBnZW5yZSA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgICAgIGdlbnJlID0gJycKCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgZGF0ZSA9IGNoYW5uZWwoJ2RhdGUnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICBpZiBkYXRlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgZGF0ZSA9ICcnCgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGNyZWRpdHMgPSBjaGFubmVsKCdjcmVkaXRzJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgaWYgY3JlZGl0cyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgICAgIGNyZWRpdHMgPSAnJwoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBpZiBsaW5rZWRVcmw9PScnOgogICAgICAgICAgICAgICAgICAgICAgICBhZGREaXIobmFtZS5lbmNvZGUoJ3V0Zi04JywgJ2lnbm9yZScpLHVybC5lbmNvZGUoJ3V0Zi04JyksMix0aHVtYm5haWwsZmFuQXJ0LGRlc2MsZ2VucmUsZGF0ZSxjcmVkaXRzLFRydWUpCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgI3ByaW50IGxpbmtlZFVybAogICAgICAgICAgICAgICAgICAgICAgICBhZGREaXIobmFtZS5lbmNvZGUoJ3V0Zi04JyksbGlua2VkVXJsLmVuY29kZSgndXRmLTgnKSwxLHRodW1ibmFpbCxmYW5BcnQsZGVzYyxnZW5yZSxkYXRlLE5vbmUsJ3NvdXJjZScpCiAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgYWRkb25fbG9nKCdUaGVyZSB3YXMgYSBwcm9ibGVtIGFkZGluZyBkaXJlY3RvcnkgZnJvbSBnZXREYXRhKCk6ICcrbmFtZS5lbmNvZGUoJ3V0Zi04JywgJ2lnbm9yZScpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGFkZG9uX2xvZygnTm8gQ2hhbm5lbHM6IGdldEl0ZW1zJykKICAgICAgICAgICAgZ2V0SXRlbXMoc291cCgnaXRlbScpLGZhbmFydCkKICAgIGVsc2U6CiAgICAgICAgcGFyc2VfbTN1KHNvdXApCgoKZGVmIHBhcnNlX20zdShkYXRhKToKICAgIGNvbnRlbnQgPSBkYXRhLnJzdHJpcCgpCiAgICBtYXRjaCA9IHJlLmNvbXBpbGUocicjRVhUSU5GOiguKz8pLCguKj8pW1xuXHJdKyhbXlxyXG5dKyknKS5maW5kYWxsKGNvbnRlbnQpCiAgICB0b3RhbCA9IGxlbihtYXRjaCkKICAgIHByaW50ICd0c2Rvd25sb2FkZXInLHRzZG93bmxvYWRlcgojICAgIHByaW50ICd0b3RhbCBtM3UgbGlua3MnLHRvdGFsCiAgICBmb3Igb3RoZXIsY2hhbm5lbF9uYW1lLHN0cmVhbV91cmwgaW4gbWF0Y2g6CiAgICAgICAgCiAgICAgICAgaWYgJ3R2Zy1sb2dvJyBpbiBvdGhlcjoKICAgICAgICAgICAgdGh1bWJuYWlsID0gcmVfbWUob3RoZXIsJ3R2Zy1sb2dvPVtcJyJdKC4qPylbXCciXScpCiAgICAgICAgICAgIGlmIHRodW1ibmFpbDoKICAgICAgICAgICAgICAgIGlmIHRodW1ibmFpbC5zdGFydHN3aXRoKCdodHRwJyk6CiAgICAgICAgICAgICAgICAgICAgdGh1bWJuYWlsID0gdGh1bWJuYWlsCgogICAgICAgICAgICAgICAgZWxpZiBub3QgYWRkb24uZ2V0U2V0dGluZygnbG9nby1mb2xkZXJQYXRoJykgPT0gIiI6CiAgICAgICAgICAgICAgICAgICAgbG9nb191cmwgPSBhZGRvbi5nZXRTZXR0aW5nKCdsb2dvLWZvbGRlclBhdGgnKQogICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbCA9IGxvZ29fdXJsICsgdGh1bWJuYWlsCgogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWwgPSB0aHVtYm5haWwKICAgICAgICAgICAgI2Vsc2U6CgogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHRodW1ibmFpbCA9ICcnCiAgICAgICAgCiAgICAgICAgaWYgJ3R5cGUnIGluIG90aGVyOgogICAgICAgICAgICBtb2RlX3R5cGUgPSByZV9tZShvdGhlciwndHlwZT1bXCciXSguKj8pW1wnIl0nKQogICAgICAgICAgICBpZiBtb2RlX3R5cGUgPT0gJ3l0LWRsJzoKICAgICAgICAgICAgICAgIHN0cmVhbV91cmwgPSBzdHJlYW1fdXJsICsiJm1vZGU9MTgiCiAgICAgICAgICAgIGVsaWYgbW9kZV90eXBlID09ICdyZWdleCc6CiAgICAgICAgICAgICAgICB1cmwgPSBzdHJlYW1fdXJsLnNwbGl0KCcmcmVnZXhzPScpCiAgICAgICAgICAgICAgICAjcHJpbnQgdXJsWzBdIGdldFNvdXAodXJsLGRhdGE9Tm9uZSkKICAgICAgICAgICAgICAgIHJlZ2V4cyA9IHBhcnNlX3JlZ2V4KGdldFNvdXAoJycsZGF0YT11cmxbMV0pKQoKICAgICAgICAgICAgICAgIGFkZExpbmsodXJsWzBdLCBjaGFubmVsX25hbWUsdGh1bWJuYWlsLCcnLCcnLCcnLCcnLCcnLE5vbmUscmVnZXhzLHRvdGFsKQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgZWxpZiBtb2RlX3R5cGUgPT0gJ2Z0dic6CiAgICAgICAgICAgICAgICBzdHJlYW1fdXJsID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5GLlQuVi8/bmFtZT0nK3VybGxpYi5xdW90ZShjaGFubmVsX25hbWUpICsnJnVybD0nICtzdHJlYW1fdXJsICsnJm1vZGU9MTI1JmNoX2ZhbmFydD1uYScKICAgICAgICBlbGlmIHRzZG93bmxvYWRlciBhbmQgJy50cycgaW4gc3RyZWFtX3VybDoKICAgICAgICAgICAgc3RyZWFtX3VybCA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8uZjRtVGVzdGVyLz91cmw9Jyt1cmxsaWIucXVvdGVfcGx1cyhzdHJlYW1fdXJsKSsnJmFtcDtzdHJlYW10eXBlPVRTRE9XTkxPQURFUiZuYW1lPScrdXJsbGliLnF1b3RlKGNoYW5uZWxfbmFtZSkKICAgICAgICBhZGRMaW5rKHN0cmVhbV91cmwsIGNoYW5uZWxfbmFtZSx0aHVtYm5haWwsJycsJycsJycsJycsJycsTm9uZSwnJyx0b3RhbCkKCgpkZWYgZ2V0Q2hhbm5lbEl0ZW1zKG5hbWUsdXJsLGZhbmFydCk6CiAgICAgICAgc291cCA9IGdldFNvdXAodXJsKQogICAgICAgIGNoYW5uZWxfbGlzdCA9IHNvdXAuZmluZCgnY2hhbm5lbCcsIGF0dHJzPXsnbmFtZScgOiBuYW1lLmRlY29kZSgndXRmLTgnKX0pCiAgICAgICAgaXRlbXMgPSBjaGFubmVsX2xpc3QoJ2l0ZW0nKQogICAgICAgIHRyeToKICAgICAgICAgICAgZmFuQXJ0ID0gY2hhbm5lbF9saXN0KCdmYW5hcnQnKVswXS5zdHJpbmcKICAgICAgICAgICAgaWYgZmFuQXJ0ID09IE5vbmU6CiAgICAgICAgICAgICAgICByYWlzZQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgZmFuQXJ0ID0gZmFuYXJ0CiAgICAgICAgZm9yIGNoYW5uZWwgaW4gY2hhbm5lbF9saXN0KCdzdWJjaGFubmVsJyk6CiAgICAgICAgICAgIG5hbWUgPSBjaGFubmVsKCduYW1lJylbMF0uc3RyaW5nCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHRodW1ibmFpbCA9IGNoYW5uZWwoJ3RodW1ibmFpbCcpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgdGh1bWJuYWlsID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgdGh1bWJuYWlsID0gJycKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgaWYgbm90IGNoYW5uZWwoJ2ZhbmFydCcpOgogICAgICAgICAgICAgICAgICAgIGlmIGFkZG9uLmdldFNldHRpbmcoJ3VzZV90aHVtYicpID09ICJ0cnVlIjoKICAgICAgICAgICAgICAgICAgICAgICAgZmFuQXJ0ID0gdGh1bWJuYWlsCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGZhbkFydCA9IGNoYW5uZWwoJ2ZhbmFydCcpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgZmFuQXJ0ID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBkZXNjID0gY2hhbm5lbCgnaW5mbycpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgZGVzYyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGRlc2MgPSAnJwoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZ2VucmUgPSBjaGFubmVsKCdnZW5yZScpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgZ2VucmUgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBnZW5yZSA9ICcnCgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBkYXRlID0gY2hhbm5lbCgnZGF0ZScpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgZGF0ZSA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGRhdGUgPSAnJwoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgY3JlZGl0cyA9IGNoYW5uZWwoJ2NyZWRpdHMnKVswXS5zdHJpbmcKICAgICAgICAgICAgICAgIGlmIGNyZWRpdHMgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBjcmVkaXRzID0gJycKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGFkZERpcihuYW1lLmVuY29kZSgndXRmLTgnLCAnaWdub3JlJyksdXJsLmVuY29kZSgndXRmLTgnKSwzLHRodW1ibmFpbCxmYW5BcnQsZGVzYyxnZW5yZSxjcmVkaXRzLGRhdGUpCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnVGhlcmUgd2FzIGEgcHJvYmxlbSBhZGRpbmcgZGlyZWN0b3J5IC0gJytuYW1lLmVuY29kZSgndXRmLTgnLCAnaWdub3JlJykpCiAgICAgICAgZ2V0SXRlbXMoaXRlbXMsZmFuQXJ0KQoKCmRlZiBnZXRTdWJDaGFubmVsSXRlbXMobmFtZSx1cmwsZmFuYXJ0KToKICAgICAgICBzb3VwID0gZ2V0U291cCh1cmwpCiAgICAgICAgY2hhbm5lbF9saXN0ID0gc291cC5maW5kKCdzdWJjaGFubmVsJywgYXR0cnM9eyduYW1lJyA6IG5hbWUuZGVjb2RlKCd1dGYtOCcpfSkKICAgICAgICBpdGVtcyA9IGNoYW5uZWxfbGlzdCgnc3ViaXRlbScpCiAgICAgICAgZ2V0SXRlbXMoaXRlbXMsZmFuYXJ0KQoKCmRlZiBnZXRJdGVtcyhpdGVtcyxmYW5hcnQsZG9udExpbms9RmFsc2UpOgogICAgICAgIHRvdGFsID0gbGVuKGl0ZW1zKQogICAgICAgIGFkZG9uX2xvZygnVG90YWwgSXRlbXM6ICVzJyAldG90YWwpCiAgICAgICAgYWRkX3BsYXlsaXN0ID0gYWRkb24uZ2V0U2V0dGluZygnYWRkX3BsYXlsaXN0JykKICAgICAgICBhc2tfcGxheWxpc3RfaXRlbXMgPWFkZG9uLmdldFNldHRpbmcoJ2Fza19wbGF5bGlzdF9pdGVtcycpCiAgICAgICAgdXNlX3RodW1iID0gYWRkb24uZ2V0U2V0dGluZygndXNlX3RodW1iJykKICAgICAgICBwYXJlbnRhbGJsb2NrID1hZGRvbi5nZXRTZXR0aW5nKCdwYXJlbnRhbGJsb2NrZWQnKQogICAgICAgIHBhcmVudGFsYmxvY2s9IHBhcmVudGFsYmxvY2s9PSJ0cnVlIgogICAgICAgIGZvciBpdGVtIGluIGl0ZW1zOgogICAgICAgICAgICBpc1hNTFNvdXJjZT1GYWxzZQogICAgICAgICAgICBpc0pzb25ycGMgPSBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgYXBwbHlibG9jaz0nZmFsc2UnCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGFwcGx5YmxvY2sgPSBpdGVtKCdwYXJlbnRhbGJsb2NrJylbMF0uc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygncGFyZW50YWxibG9jayBFcnJvcicpCiAgICAgICAgICAgICAgICBhcHBseWJsb2NrID0gJycKICAgICAgICAgICAgaWYgYXBwbHlibG9jaz09J3RydWUnIGFuZCBwYXJlbnRhbGJsb2NrOiBjb250aW51ZQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIG5hbWUgPSBpdGVtKCd0aXRsZScpWzBdLnN0cmluZwogICAgICAgICAgICAgICAgaWYgbmFtZSBpcyBOb25lOgogICAgICAgICAgICAgICAgICAgIG5hbWUgPSAndW5rbm93bj8nCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnTmFtZSBFcnJvcicpCiAgICAgICAgICAgICAgICBuYW1lID0gJycKCgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpZiBpdGVtKCdlcGcnKToKICAgICAgICAgICAgICAgICAgICBpZiBpdGVtLmVwZ191cmw6CiAgICAgICAgICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnR2V0IEVQRyBSZWdleCcpCiAgICAgICAgICAgICAgICAgICAgICAgIGVwZ191cmwgPSBpdGVtLmVwZ191cmwuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIGVwZ19yZWdleCA9IGl0ZW0uZXBnX3JlZ2V4LnN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICBlcGdfbmFtZSA9IGdldF9lcGcoZXBnX3VybCwgZXBnX3JlZ2V4KQogICAgICAgICAgICAgICAgICAgICAgICBpZiBlcGdfbmFtZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgKz0gJyAtICcgKyBlcGdfbmFtZQogICAgICAgICAgICAgICAgICAgIGVsaWYgaXRlbSgnZXBnJylbMF0uc3RyaW5nID4gMToKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSArPSBnZXRlcGcoaXRlbSgnZXBnJylbMF0uc3RyaW5nKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIGFkZG9uX2xvZygnRVBHIEVycm9yJykKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdXJsID0gW10KICAgICAgICAgICAgICAgIGlmIGxlbihpdGVtKCdsaW5rJykpID4wOgogICAgICAgICAgICAgICAgICAgICNwcmludCAnaXRlbSBsaW5rJywgaXRlbSgnbGluaycpCgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ2xpbmsnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwuYXBwZW5kKGkuc3RyaW5nKQoKICAgICAgICAgICAgICAgIGVsaWYgbGVuKGl0ZW0oJ3Nwb3J0c2RldmlsJykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ3Nwb3J0c2RldmlsJyk6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBpLnN0cmluZyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRzZGV2aWwgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLlNwb3J0c0RldmlsLz9tb2RlPTEmYW1wO2l0ZW09Y2F0Y2hlciUzZHN0cmVhbXMlMjZ1cmw9JyAraS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZmVyZXIgPSBpdGVtKCdyZWZlcmVyJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiByZWZlcmVyOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNwcmludCAncmVmZXJlciBmb3VuZCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcG9ydHNkZXZpbCA9IHNwb3J0c2RldmlsICsgJyUyNnJlZmVyZXI9JyArcmVmZXJlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChzcG9ydHNkZXZpbCkKICAgICAgICAgICAgICAgIGVsaWYgbGVuKGl0ZW0oJ3AycCcpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdwMnAnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnc29wOi8vJyBpbiBpLnN0cmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3AgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz9tb2RlPTJ1cmw9JytpLnN0cmluZyArJyYnICsgJ25hbWU9JytuYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChzb3ApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAycD0ncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz9tb2RlPTEmdXJsPScraS5zdHJpbmcgKycmJyArICduYW1lPScrbmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQocDJwKQogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgndmF1Z2huJykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ3ZhdWdobicpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhdWdobiA9ICdwbHVnaW46Ly9wbHVnaW4uc3RyZWFtLnZhdWdobmxpdmUudHYvP21vZGU9UGxheUxpdmVTdHJlYW0mYW1wO2NoYW5uZWw9JytpLnN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZCh2YXVnaG4pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdpbGl2ZScpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdpbGl2ZScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCAnaHR0cCcgaW4gaS5zdHJpbmc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWxpdmUgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnRiaC5pbGl2ZS8/dXJsPWh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by92aWV3LycraS5zdHJpbmcrJyZhbXA7bGluaz05OSZhbXA7bW9kZT1pTGl2ZVBsYXknCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlsaXZlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby50YmguaWxpdmUvP3VybD0nK2kuc3RyaW5nKycmYW1wO2xpbms9OTkmYW1wO21vZGU9aUxpdmVQbGF5JwogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgneXQtZGwnKSkgPjA6CiAgICAgICAgICAgICAgICAgICAgZm9yIGkgaW4gaXRlbSgneXQtZGwnKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5dGRsID0gaS5zdHJpbmcgKyAnJm1vZGU9MTgnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwuYXBwZW5kKHl0ZGwpCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdkbScpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdkbScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRtID0gInBsdWdpbjovL3BsdWdpbi52aWRlby5kYWlseW1vdGlvbl9jb20vP21vZGU9cGxheVZpZGVvJnVybD0iICsgaS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQoZG0pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdkbWxpdmUnKSkgPjA6CiAgICAgICAgICAgICAgICAgICAgZm9yIGkgaW4gaXRlbSgnZG1saXZlJyk6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBpLnN0cmluZyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG0gPSAicGx1Z2luOi8vcGx1Z2luLnZpZGVvLmRhaWx5bW90aW9uX2NvbS8/bW9kZT1wbGF5TGl2ZVZpZGVvJnVybD0iICsgaS5zdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQoZG0pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCd1dHViZScpKSA+MDoKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCd1dHViZScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICcgJyBpbiBpLnN0cmluZyA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXR1YmUgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnlvdXR1YmUvc2VhcmNoLz9xPScrIHVybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSnNvbnJwYz11dHViZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBsZW4oaS5zdHJpbmcpID09IDExOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0dWJlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3BsYXkvP3ZpZGVvX2lkPScrIGkuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmIChpLnN0cmluZy5zdGFydHN3aXRoKCdQTCcpIGFuZCBub3QgJyZvcmRlcj0nIGluIGkuc3RyaW5nKSBvciBpLnN0cmluZy5zdGFydHN3aXRoKCdVVScpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0dWJlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3BsYXkvPyZvcmRlcj1kZWZhdWx0JnBsYXlsaXN0X2lkPScgKyBpLnN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBpLnN0cmluZy5zdGFydHN3aXRoKCdQTCcpIG9yIGkuc3RyaW5nLnN0YXJ0c3dpdGgoJ1VVJyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXR1YmUgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnlvdXR1YmUvcGxheS8/cGxheWxpc3RfaWQ9JyArIGkuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGkuc3RyaW5nLnN0YXJ0c3dpdGgoJ1VDJykgYW5kIGxlbihpLnN0cmluZykgPiAxMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dHViZSA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8ueW91dHViZS9jaGFubmVsLycgKyBpLnN0cmluZyArICcvJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSnNvbnJwYz11dHViZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBub3QgaS5zdHJpbmcuc3RhcnRzd2l0aCgnVUMnKSBhbmQgbm90IChpLnN0cmluZy5zdGFydHN3aXRoKCdQTCcpKSAgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0dWJlID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3VzZXIvJyArIGkuc3RyaW5nICsgJy8nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNKc29ucnBjPXV0dWJlCiAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQodXR1YmUpCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCdpbWRiJykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ2ltZGInKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IGkuc3RyaW5nID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBhZGRvbi5nZXRTZXR0aW5nKCdnZW5lc2lzb3JwdWxzYXInKSA9PSAnMCc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1kYiA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8uZ2VuZXNpcy8/YWN0aW9uPXBsYXkmaW1kYj0nK2kuc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZGIgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnB1bHNhci9tb3ZpZS90dCcraS5zdHJpbmcrJy9wbGF5JwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChpbWRiKQogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgnZjRtJykpID4wOgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCdmNG0nKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBpLnN0cmluZyA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICcuZjRtJyBpbiBpLnN0cmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjRtID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5mNG1UZXN0ZXIvP3VybD0nK3VybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgJy5tM3U4JyBpbiBpLnN0cmluZzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjRtID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5mNG1UZXN0ZXIvP3VybD0nK3VybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKSsnJmFtcDtzdHJlYW10eXBlPUhMUycKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZjRtID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby5mNG1UZXN0ZXIvP3VybD0nK3VybGxpYi5xdW90ZV9wbHVzKGkuc3RyaW5nKSsnJmFtcDtzdHJlYW10eXBlPVNJTVBMRScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQoZjRtKQogICAgICAgICAgICAgICAgZWxpZiBsZW4oaXRlbSgnZnR2JykpID4wOgogICAgICAgICAgICAgICAgICAgIGZvciBpIGluIGl0ZW0oJ2Z0dicpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ0diA9ICdwbHVnaW46Ly9wbHVnaW4udmlkZW8uRi5ULlYvP25hbWU9Jyt1cmxsaWIucXVvdGUobmFtZSkgKycmdXJsPScgK2kuc3RyaW5nICsnJm1vZGU9MTI1JmNoX2ZhbmFydD1uYScKICAgICAgICAgICAgICAgICAgICAgICAgdXJsLmFwcGVuZChmdHYpCiAgICAgICAgICAgICAgICBlbGlmIGxlbihpdGVtKCd1cmxzb2x2ZScpKSA+MDoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiBpdGVtKCd1cmxzb2x2ZScpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgaS5zdHJpbmcgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVyID0gaS5zdHJpbmcgKycmbW9kZT0xOScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybC5hcHBlbmQocmVzb2x2ZXIpCiAgICAgICAgICAgICAgICBpZiBsZW4odXJsKSA8IDE6CiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgYWRkb25fbG9nKCdFcnJvciA8bGluaz4gZWxlbWVudCwgUGFzc2luZzonK25hbWUuZW5jb2RlKCd1dGYtOCcsICdpZ25vcmUnKSkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlzWE1MU291cmNlID0gaXRlbSgnZXh0ZXJuYWxsaW5rJylbMF0uc3RyaW5nCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwoKICAgICAgICAgICAgaWYgaXNYTUxTb3VyY2U6CiAgICAgICAgICAgICAgICBleHRfdXJsPVtpc1hNTFNvdXJjZV0KICAgICAgICAgICAgICAgIGlzWE1MU291cmNlPVRydWUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGlzWE1MU291cmNlPUZhbHNlCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlzSnNvbnJwYyA9IGl0ZW0oJ2pzb25ycGMnKVswXS5zdHJpbmcKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgICAgIGlmIGlzSnNvbnJwYzoKCiAgICAgICAgICAgICAgICBleHRfdXJsPVtpc0pzb25ycGNdCiAgICAgICAgICAgICAgICAjcHJpbnQgJ0pTT04tUlBDIGV4dF91cmwnLGV4dF91cmwKICAgICAgICAgICAgICAgIGlzSnNvbnJwYz1UcnVlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpc0pzb25ycGM9RmFsc2UKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdGh1bWJuYWlsID0gaXRlbSgndGh1bWJuYWlsJylbMF0uc3RyaW5nCiAgICAgICAgICAgICAgICBpZiB0aHVtYm5haWwgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICB0aHVtYm5haWwgPSAnJwogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpZiBub3QgaXRlbSgnZmFuYXJ0Jyk6CiAgICAgICAgICAgICAgICAgICAgaWYgYWRkb24uZ2V0U2V0dGluZygndXNlX3RodW1iJykgPT0gInRydWUiOgogICAgICAgICAgICAgICAgICAgICAgICBmYW5BcnQgPSB0aHVtYm5haWwKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAg'
love = ''
god = ''
destiny = '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MJqyrUZfpzIaMKuhLJ1yPvNtVPNtVPNtqKWfCFpaPvNtVPNtVPNtnJ1jo3W0VTAipUxXVPNtVPNtVPOfow0aWjbtVPNtVPNtVUWhqJ1vMKV9ZNbtVPNtVPNtVTMipvOiLzbtnJ4tpzI0BtbtVPNtVPNtVPNtVPO0pax6PvNtVPNtVPNtVPNtVPNtVPOloaIgLzIlXm0kPvNtVPNtVPNtVPNtVPNtVPOhMKqwo3O5CJAipUxhMTIypTAipUxbpzIaMKumXDbtVPNtVlNtVPNtVPNtVPNtVUOlnJ50VPqhMKqwo3O5WlkhMKqwo3O5YPOfMJ4bozI3L29jrFxXVPNtVPNtVPNtVPNtVPNtVTkcp3ElMKOyLKEHCJkcp3ElMKOyLKDXVPNtVPNtVPNtVPNtVPNtVTx9ZNbtVPNtVPNtVPNtVPNtVPNtMz9lVTxtnJ4tpzShM2HboTIhXT9vnvxcBtbtVPNtVlNtVPNtVPNtVPNtVPNtVPOjpzyhqPNanFOcplNaYTxfVTkyovuiLzbcYPOfMJ4bozI3L29jrFxXVPNtVPNtVPNtVPNtVPNtVPNtVPOcMvOfMJ4bozI3L29jrFx+ZQbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMz9lVUEbMI9eMKyCYPO0nTIsqzSfqJICVTyhVT5yq2AipUxhnKEypzy0MJ1mXPx6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOcMvO0nTIsqzSfqJICVTymVT5iqPOBo25yBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTMipvO0nTIsn2I5YPO0nTIsqzSfqJHtnJ4tqTuyK3MuoUIyGl5cqTIlnKEyoKZbXGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtqTuyK3MuoUIyVTymVT5iqPOBo25yBvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPvNtVPNtVPNtVlNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpUWcoaDtVPqeMKxtLJ5xVUMuoPpfqTuyK2gyrFjtqTuyK3MuoUIyPvNtVPNtVPNtVlNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpUWcoaDtW2SuWjbtVPNtVPNtVPZtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUOlnJ50VPqoWlNeVUWyM2I4ozSgMFfaYaOupzSgWlgmqUVbnFfkXFNeVPqqWjbtVPNtVPNtVPZtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUOlnJ50VUWypUVbo2WdJ2yqXDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtqUyjMFu0nTIsqzSfqJHcVTymVTEcL3D6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMz9lVUEbMI9eMKyfYPO0nTIsqzSfqJIfVTyhVUEbMI92LJk1MF5cqTIlnKEyoKZbXGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtqTuyK3MuoUIyoPOcplOho3DtGz9hMGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUMuoQ1Bo25yPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOcMvOcp2yhp3EuozAyXT9vnvk0qKOfMFx6VPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUElrGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO2LJj9VT9vnygcKF5xMJAiMTHbW3I0Mv04WlxtPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMKuwMKO0BvNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqzSfCFOiLzconI0tPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOyoUAyBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUElrGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqzSfCFOiLzbhMTIwo2EyXPq1qTLgBPpcVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTI4L2IjqQbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqzSfCFOiLzbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtW1faVPftpzIaMKuhLJ1yXlphpTSlLJ0aX3A0pvucXmRcVPftW11oERIqWlOcovO0nTIsqzSfqJIfBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUEbMI92LJk1MJj9qTuyK3MuoUIyoP5lMKOfLJAyXPqoWlNeVUWyM2I4ozSgMFfaYaOupzSgWlgmqUVbnFfkXFNeVPqqJ0ESKFpfVUIhMKAwLKOyXUMuoPxcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO0nTIsqzSfqJIoqTuyK2gyrJkqCKEbMI92LJk1MJjhpzIjoTSwMFtaJlptXlOlMJqyrT5uoJHeWl5jLKWuoFpep3ElXTxeZFxtXlNaKFpfVUMuoPxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPAjpzyhqPNaMzylp3Dtp2IwWlk0nTIsqzSfqJIoqTuyK2gyrJkqPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTIfp2H6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqzSfCH5iozHXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOcMvOcp2yhp3EuozAyXT9vnvk0qKOfMFx6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUElrGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO2LJj9o2WdJ2yqYzEyL29xMFtaqKEzYGtaXFNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMKuwMKO0BtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtqzSfCJ9vnygcKFNXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOyoUAyBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO0pax6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO2LJj9VT9vnv5xMJAiMTHbW3I0Mv04WlxtPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTI4L2IjqQbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUMuoQ0to2WdPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtW1faVPftpzIaMKuhLJ1yXlphpTSlLJ0aX3A0pvucXmRcVPftW11oERIqWlOcovO0nTIsqzSfqJH6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPAjpzyhqPNaMz91ozDtERHaYUEbMI92LJk1MF5lMKOfLJAyXPqoWlNe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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))